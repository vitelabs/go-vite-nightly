name: integration-testing

on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
      gvite_nighty_branch:
        type: string
        required: false
        default: 'master'
  workflow_dispatch:
    inputs:
      branch:
        description: 'testing go-vite with which branch'
        required: true
        default: 'master'
      gvite_nighty_branch:
        description: 'run go-vite-nightly with which branch'
        required: true 
        default: 'master'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    # Inconsistent inputs context for workflow_dispatch and workflow_call
    - name: Set branch and tag
      id: step0
      run: |
        echo "::set-output name=branch::${{ (inputs || github.event.inputs).branch }}"
        echo "::set-output name=gvite_nighty_branch::${{ (inputs || github.event.inputs).gvite_nighty_branch }}"

    - name: Echo branch and tag
      run: echo ${{ steps.step0.outputs.branch }} ${{ steps.step0.outputs.tag }}

    - uses: actions/checkout@v2
      with:
        repository: 'vitelabs/go-vite'
        ref: '${{ steps.step0.outputs.branch }}'
        path: go-vite

    - uses: actions/checkout@v2
      with:
        ref: '${{ steps.step0.outputs.gvite_nighty_branch }}'
        path: go-vite-nightly

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Make && Docker Image
      run: |
        pwd
        cd go-vite
        make test
        make gvite-linux
        cp build/cmd/gvite/gvite-*-linux/gvite ../go-vite-nightly/gvite-testing

    - name: Fetch gvite ledger file
      run: |   
        pwd 
        cd go-vite-nightly/gvite-testing
        sudo apt-get install jq -y
        wget -c `cat ../integration-testing/scripts/result.json | jq -r '.url'`
        tar xvf ledger.tar.gz && rm ledger.tar.gz
        pwd
        ls -al *

    - name: Run Docker
      run: |
        pwd
        cd go-vite-nightly/gvite-testing/
        docker-compose -f docker-compose.yml up --build -d
        sleep 10
        docker-compose logs --tail="1000"
        docker ps -a

    - name: Check Result
      run: |
        pwd
        cd go-vite-nightly/integration-testing
        npm install
        npx ts-node scripts/check_result.ts

       
      
